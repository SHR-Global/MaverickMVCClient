@using Microsoft.AspNet.Identity
@using Microsoft.Owin.Security
<ul class="navbar-nav ms-auto me-4 my-3 my-lg-0">
    @if (Request.IsAuthenticated)
    {
        using (Html.BeginForm("ExternalLogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
        {
                <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Hello <b>@User.Identity.Name</b>
                </a>
                <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                    <li>@Html.ActionLink("Profile", "Index", "Profile", routeValues: null, htmlAttributes: new { title = "Profile", @class = "dropdown-item" })</li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item" href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
                </ul>
            </li>
        }
    }
    else
    {
        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
        using (Html.BeginForm("ExternalLogin", "Account"))
        {
            @Html.AntiForgeryToken()
            foreach (AuthenticationDescription p in loginProviders)
            {
                <li class="nav-item">
                    <button type="submit" class="btn btn-dark navbar-right" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.Caption Login</button>
                </li>
            }
        }
    }
</ul>